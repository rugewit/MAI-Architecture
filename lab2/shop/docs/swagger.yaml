basePath: /
definitions:
  models.SignUpUser:
    properties:
      lastname:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  models.User:
    properties:
      creationDate:
        type: string
      id:
        type: string
      lastname:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
host: localhost:8081
info:
  contact: {}
  title: Shop
  version: "1.0"
paths:
  /users:
    get:
      consumes:
      - application/json
      description: Get Users
      operationId: get-users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "404":
          description: Not found
          schema: {}
      summary: Get Users
      tags:
      - User API
  /users/:
    post:
      consumes:
      - application/json
      description: Create an user
      operationId: create-user
      parameters:
      - description: user
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.SignUpUser'
      produces:
      - application/json
      responses:
        "201":
          description: created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad request
          schema: {}
      summary: Create an user
      tags:
      - User API
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user
      operationId: delete-user
      parameters:
      - description: user ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "404":
          description: Not found
          schema: {}
      summary: Delete a user
      tags:
      - User API
    get:
      consumes:
      - application/json
      description: Get an user
      operationId: get-user
      parameters:
      - description: user ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "404":
          description: Not found
          schema: {}
      summary: Get an user
      tags:
      - User API
    put:
      consumes:
      - application/json
      description: Update an user
      operationId: update-user
      parameters:
      - description: user ID
        in: path
        name: id
        required: true
        type: string
      - description: updated user
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.SignUpUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad request
          schema: {}
        "404":
          description: Not found
          schema: {}
      summary: Update an user
      tags:
      - User API
swagger: "2.0"
